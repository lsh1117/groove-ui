/* ==========================================================================
   Mixins
   ========================================================================== */

// Flexbox utilities
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

// Grid utilities
@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin grid-auto-fit($min-width: 200px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $spacing-md;
}

// Typography
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visual effects
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin focus-ring {
  outline: $focus-outline;
  outline-offset: $focus-outline-offset;
}

@mixin focus-ring-inset {
  outline: $focus-outline;
  outline-offset: -$focus-outline-offset;
}

// Button states
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

@mixin button-base {
  @include button-reset;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-md;
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  line-height: $line-height-normal;
  text-decoration: none;
  border-radius: $border-radius-md;
  transition: all $transition-normal;
  cursor: pointer;
  user-select: none;

  &:focus {
    @include focus-ring;
  }

  &:disabled,
  &.is-disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// Form elements
@mixin form-element-base {
  display: block;
  width: 100%;
  padding: $spacing-sm $spacing-md;
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  color: $color-gray-900;
  background-color: $color-white;
  border: $border-width-thin solid $color-gray-300;
  border-radius: $border-radius-md;
  transition: border-color $transition-normal, box-shadow $transition-normal;

  &:focus {
    outline: none;
    border-color: $color-primary;
    box-shadow: 0 0 0 3px rgba($color-primary, 0.1);
  }

  &:disabled,
  &.is-disabled {
    background-color: $color-gray-100;
    color: $color-gray-500;
    cursor: not-allowed;
  }

  &::placeholder {
    color: $color-gray-400;
  }
}

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: $breakpoint-xs) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// Container
@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 $spacing-md;

  @include respond-to(sm) {
    padding: 0 $spacing-lg;
  }
}

// Card
@mixin card {
  background-color: $color-white;
  border: $border-width-thin solid $color-gray-200;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-sm;
  overflow: hidden;
}

// Animation
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@mixin slide-up($duration: $transition-normal) {
  animation: slideUp $duration ease-out;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
